// -------------------------------------------------------------
// IMC-MetabaseBot - index.js (r√©ponse directe)
// -------------------------------------------------------------
require('dotenv').config();
const { Client, GatewayIntentBits, Events, EmbedBuilder } = require('discord.js');

// V√©rification du token
const { TOKEN } = process.env;
if (!TOKEN) {
  console.error('‚ùå Le token du bot est requis dans process.env.TOKEN');
  process.exit(1);
}

// Initialisation du client Discord
const client = new Client({ intents: [GatewayIntentBits.Guilds] });

client.once(Events.ClientReady, () => {
  console.log(`‚úÖ ${client.user.tag} est en ligne et pr√™t.`);
});

client.on(Events.InteractionCreate, async (interaction) => {
  if (!interaction.isChatInputCommand()) return;
  const { commandName } = interaction;

  try {
    // Commande /imc
    if (commandName === 'imc') {
      const poids = interaction.options.getNumber('poids');
      const tailleCm = interaction.options.getNumber('taille');
      if (!poids || !tailleCm) {
        return interaction.reply({ content: '‚ùå Merci d‚Äôindiquer un poids et une taille valides.', ephemeral: true });
      }

      const tailleM = tailleCm / 100;
      const imc = poids / (tailleM * tailleM);
      let interpretation;
      let conseil;

      if (imc < 18.5) {
        interpretation = 'üìâ Insuffisance pond√©rale';
        conseil = 'üçΩÔ∏è Augmente tes apports caloriques avec des repas √©quilibr√©s.';
      } else if (imc < 25) {
        interpretation = '‚úÖ Corpulence normale';
        conseil = 'üí™ Continue ton rythme alimentaire et ton activit√© physique.';
      } else if (imc < 30) {
        interpretation = '‚ö†Ô∏è Surpoids';
        conseil = 'üèÉ‚Äç‚ôÇÔ∏è Augmente ton activit√© physique et surveille ton alimentation.';
      } else if (imc < 35) {
        interpretation = '‚ö†Ô∏è Ob√©sit√© mod√©r√©e';
        conseil = 'ü©∫ Mets en place un suivi alimentaire et consulte si besoin.';
      } else {
        interpretation = 'üõë Ob√©sit√© s√©v√®re';
        conseil = '‚ö†Ô∏è Consulte rapidement un professionnel de sant√©.';
      }

      const embed = new EmbedBuilder()
        .setColor(0x00bfa5)
        .setTitle('ü©∫ R√©sultat de ton IMC')
        .addFields(
          { name: 'ü©ª IMC', value: imc.toFixed(1), inline: true },
          { name: 'üóÇÔ∏è Interpr√©tation', value: interpretation, inline: true },
          { name: 'üí° Conseil', value: conseil },
          { name: 'üìå Formule', value: 'Poids (kg) √∑ Taille¬≤ (m¬≤)' }
        )
        .setFooter({ text: 'HealthyBot ‚Ä¢ Calcul direct dans Discord' });

      return interaction.reply({ embeds: [embed] });
    }

    // Commande /metabase (M√©tabolisme de Base)
    if (commandName === 'metabase') {
      const poids = interaction.options.getNumber('poids');
      const taille = interaction.options.getNumber('taille'); // en cm
      const age = interaction.options.getNumber('age');
      const sexe = interaction.options.getString('sexe');
      const activite = interaction.options.getNumber('activite');

      if (!poids || !taille || !age || !sexe || !activite) {
        return interaction.reply({ content: '‚ùå Merci de fournir toutes les informations demand√©es.', ephemeral: true });
      }

      // Calcul du MB selon Harris-Benedict
      let mb;
      switch (sexe.toLowerCase()) {
        case 'homme':
          mb = 10 * poids + 6.25 * taille - 5 * age + 5;
          break;
        case 'femme':
          mb = 10 * poids + 6.25 * taille - 5 * age - 161;
          break;
        default:
          return interaction.reply({ content: '‚ùå Sexe invalide. (homme/femme)', ephemeral: true });
      }

      const tdee = mb * activite;
      const embed = new EmbedBuilder()
        .setColor(0x00bfa5)
        .setTitle('üî• R√©sultat de ton M√©tabolisme de Base')
        .addFields(
          { name: 'ü©ª MB (au repos)', value: `${Math.round(mb)} kcal/jour`, inline: true },
          { name: 'üî• TDEE (activit√© incluse)', value: `${Math.round(tdee)} kcal/jour`, inline: true },
          { name: 'üìå Formule utilis√©e', value: 'Harris-Benedict (homme/femme), multipli√© par le facteur d‚Äôactivit√©' }
        )
        .setFooter({ text: 'HealthyBot ‚Ä¢ Calcul direct dans Discord' });

      return interaction.reply({ embeds: [embed] });
    }

    // Commande non g√©r√©e
    return interaction.reply({ content: `‚ùå Commande inconnue : ${commandName}`, ephemeral: true });
  } catch (err) {
    console.error('‚ùå Erreur interactionCreate :', err);
    return interaction.reply({ content: '‚ùå Une erreur interne est survenue.', ephemeral: true });
  }
});

client.login(TOKEN);
